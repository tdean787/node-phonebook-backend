{"version":3,"sources":["services/persons.js","components/Form.js","components/Notification.js","components/Persons.js","App.js","index.js"],"names":["apiURL","axios","get","Form","props","onSubmit","addPerson","onChange","personChange","phoneChange","type","Notification","style","message","notificationStyle","className","Persons","person","deletePerson","name","phone","onClick","id","App","useState","persons","setPersons","newPerson","setNewName","errorMessage","setErrorMessage","setNotificationStyle","useEffect","personService","then","response","console","log","data","window","confirm","delete","filter","setTimeout","event","preventDefault","checkName","map","personObj","includes","personMatch","find","put","res","catch","post","concat","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfb37f68.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst apiURL = \"/api/phonebook\";\n\nconst getAll = () => {\n  return axios.get(apiURL);\n};\n\nconst create = (newObject) => {\n  return axios.post(apiURL, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${apiURL}/${id}`, newObject);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React from \"react\";\n\nconst Form = (props) => {\n  return (\n    <div>\n      <h3>Add Person Form</h3>\n      <form onSubmit={props.addPerson}>\n        <div>\n          Name: <input onChange={props.personChange} />\n        </div>\n        <div>\n          Phone: <input onChange={props.phoneChange} />\n        </div>\n        <div>\n          <button type=\"submit\"> Add Person </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Notification = ({ message, notificationStyle }) => {\n  let style;\n  if (notificationStyle === \"confirmed\") {\n    style = \"confirmed\";\n  }\n\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={style}>{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Persons = ({ person, deletePerson }) => {\n  return (\n    <div>\n      <p>\n        {person.name} - {person.phone}{\" \"}\n        <button onClick={() => deletePerson(person.id, person.name)}>\n          {\" \"}\n          Delete{\" \"}\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default Persons;\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport personService from \"./services/persons\";\nimport Form from \"./components/Form\";\nimport Notification from \"./components/Notification\";\nimport Persons from \"./components/Persons\";\n\nfunction App() {\n  const [persons, setPersons] = useState([\n    { name: \"hmmm...?\", id: \"Taylor\", phone: \"123-456-7890\" },\n  ]);\n  const [newPerson, setNewName] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"some error\");\n  const [notificationStyle, setNotificationStyle] = useState(\"null\");\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      console.log(response.data);\n      setPersons(response.data);\n    });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const checkName = persons.map((person) => person.name);\n    const personObj = {\n      name: newPerson.name,\n      id: newPerson.id,\n      phone: newPerson.phone,\n    };\n\n    let personResponse = undefined;\n\n    if (checkName.includes(newPerson.name)) {\n      if (\n        window.confirm(`${newPerson.name} already in phonebook. Update number?`)\n      ) {\n        console.log(persons);\n        let personMatch = persons.find(\n          (person) => person.name === newPerson.name\n        );\n        console.log(personMatch);\n\n        console.log(personMatch[0].id);\n\n        console.log(personObj);\n        axios\n          .put(`/api/phonebook/${personMatch[0].id}`, personObj)\n          .then((response) => {\n            personResponse = response.data;\n            axios.get(\"/api/phonebook\").then((res) => setPersons(res.data));\n          })\n          .catch(() => {\n            setErrorMessage(\"The person was already deleted from server\");\n            setNotificationStyle(\"confirmed\");\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 2000);\n          });\n        setErrorMessage(\"Number was updated\");\n        setNotificationStyle(\"confirmed\");\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 2000);\n      }\n\n      return;\n      //below condition will run if person does not match\n    } else {\n      axios.post(\"/api/phonebook\", personObj).then((response) => {\n        setPersons(persons.concat(personObj));\n        setNewName(\"\");\n        setErrorMessage(\"Person Added\");\n        setNotificationStyle(\"confirmed\");\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 2000);\n      });\n    }\n  };\n\n  const personChange = (event) => {\n    setNewName({ ...newPerson, name: event.target.value });\n  };\n\n  const phoneChange = (event) => {\n    setNewName({ ...newPerson, phone: event.target.value });\n  };\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Do you really want to delete?`)) {\n      axios.delete(`/api/phonebook/${id}`).then((response) => {\n        console.log(response);\n        setPersons(persons.filter((person) => person.id !== id));\n      });\n      setErrorMessage(`${name} was deleted`);\n      setNotificationStyle(\"confirmed\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 2000);\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <Form\n        addPerson={addPerson}\n        personChange={personChange}\n        phoneChange={phoneChange}\n      />\n      <Notification\n        notificationStyle={notificationStyle}\n        message={errorMessage}\n      />\n      {persons.map((person) => (\n        <Persons person={person} deletePerson={deletePerson} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}