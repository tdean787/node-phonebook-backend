{"version":3,"sources":["services/persons.js","components/Form.js","components/Notification.js","components/Persons.js","App.js","index.js"],"names":["apiURL","axios","get","Form","props","onSubmit","addPerson","onChange","personChange","phoneChange","type","Notification","message","notificationStyle","className","Persons","person","deletePerson","name","number","onClick","id","App","useState","phone","persons","setPersons","newPerson","setNewName","errorMessage","setErrorMessage","setNotificationStyle","useEffect","personService","then","response","data","window","confirm","delete","console","log","catch","err","setTimeout","event","preventDefault","checkName","map","personObj","includes","personMatch","find","put","res","post","concat","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c78db37.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiURL = \"/api/phonebook\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(apiURL);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(apiURL, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${apiURL}/${id}`, newObject);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div>\r\n      <h3>Add Person Form</h3>\r\n      <form onSubmit={props.addPerson}>\r\n        <div>\r\n          Name: <input onChange={props.personChange} />\r\n        </div>\r\n        <div>\r\n          Phone: <input onChange={props.phoneChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\"> Add Person </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, notificationStyle }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={notificationStyle}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ person, deletePerson }) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        {person.name} - {person.number}{\" \"}\r\n        <button onClick={() => deletePerson(person.id, person.name)}>\r\n          {\" \"}\r\n          Delete{\" \"}\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport personService from \"./services/persons\";\r\nimport Form from \"./components/Form\";\r\nimport Notification from \"./components/Notification\";\r\nimport Persons from \"./components/Persons\";\r\n\r\nfunction App() {\r\n  const [persons, setPersons] = useState([\r\n    { name: \"missing api\", id: \"Taylor\", phone: \"123-456-7890\" },\r\n  ]);\r\n  const [newPerson, setNewName] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [notificationStyle, setNotificationStyle] = useState(\"error\");\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then((response) => {\r\n      setPersons(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n    const checkName = persons.map((person) => person.name);\r\n    const personObj = {\r\n      name: newPerson.name,\r\n      number: newPerson.phone,\r\n    };\r\n\r\n    if (checkName.includes(newPerson.name)) {\r\n      if (\r\n        window.confirm(`${newPerson.name} already in phonebook. Update number?`)\r\n      ) {\r\n        let personMatch = persons.find(\r\n          (person) => person.name === newPerson.name\r\n        );\r\n        // console.log(personMatch);\r\n        axios\r\n          .put(`/api/phonebook/${personMatch.id}`, personObj)\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            axios.get(\"/api/phonebook\").then((res) => setPersons(res.data));\r\n          })\r\n          .catch(() => {\r\n            setErrorMessage(`${personObj.name} had their number updated`);\r\n            setNotificationStyle(\"confirmed\");\r\n            debugger;\r\n            setTimeout(() => {\r\n              setErrorMessage(null);\r\n            }, 2000);\r\n          });\r\n        setErrorMessage(\r\n          `Number of ${personObj.name} was updated to ${personObj.number}`\r\n        );\r\n        setNotificationStyle(\"confirmed\");\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 2000);\r\n      }\r\n\r\n      return;\r\n      //below condition will run if person does not match\r\n    } else {\r\n      axios.post(\"/api/phonebook\", personObj).then((response) => {\r\n        setPersons(persons.concat(personObj));\r\n        setNewName(\"\");\r\n        setErrorMessage(\"Person Added\");\r\n        setNotificationStyle(\"confirmed\");\r\n        // debugger;\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 2000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const personChange = (event) => {\r\n    setNewName({ ...newPerson, name: event.target.value });\r\n  };\r\n\r\n  const phoneChange = (event) => {\r\n    setNewName({ ...newPerson, phone: event.target.value });\r\n  };\r\n\r\n  const deletePerson = (id, name) => {\r\n    if (window.confirm(`Do you really want to delete?`)) {\r\n      axios\r\n        .delete(`/api/phonebook/${id}`)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n        .catch((err) => console.log(err));\r\n\r\n      personService.getAll().then((response) => setPersons(response.data));\r\n\r\n      setErrorMessage(`${name} was deleted`);\r\n      setNotificationStyle(\"deleted\");\r\n\r\n      setTimeout(() => {\r\n        debugger;\r\n        setErrorMessage(null);\r\n      }, 2000);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        addPerson={addPerson}\r\n        personChange={personChange}\r\n        phoneChange={phoneChange}\r\n      />\r\n      <Notification\r\n        notificationStyle={notificationStyle}\r\n        message={errorMessage}\r\n      />\r\n      {persons.map((person) => (\r\n        <Persons person={person} deletePerson={deletePerson} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}